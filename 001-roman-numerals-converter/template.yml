AWSTemplateFormatVersion: 2010-09-09

Description: |
  Build webserver for flask application

Parameters:

  KeyPair:
    Description: Key Name for instance
    Type: AWS::EC2::KeyPair::KeyName

  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64'

Resources:

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP and SSH
      VpcId: vpc-06518cb64bbee87d1  # âœ… Fixed VPC ID
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  WebServer:
    Type: AWS::EC2::Instance
    Properties:
      Tags: 
        - Key: Name
          Value: serdar-webserver
      ImageId: !Ref LatestAmiId
      InstanceType: t2.micro
      KeyName: !Ref KeyPair
      SecurityGroupIds: 
        - !Ref SecurityGroup
      UserData: !Base64 |
          #!/bin/bash -x

          # update system
          yum update -y

          # install Python and Flask
          yum install python3 -y
          yum install python3-pip -y
          pip3 install flask

          # change to the user directory
          cd /home/ec2-user

          # get the app.py file into current dir
          REPO_URL="https://raw.githubusercontent.com/Scavdar/my-repository/main/001-roman-numerals-converter"
          wget ${REPO_URL}/app.py

          # get the templates into the templates/ directory
          mkdir -p templates
          cd templates
          wget ${REPO_URL}/templates/index.html
          wget ${REPO_URL}/templates/result.html
          cd ..

          # run the python application in the background
          nohup python3 app.py > app.log 2>&1 &

Outputs:

  InstancePublicIP:
    Description: Public IP address of the web server
    Value: !GetAtt WebServer.PublicIp
